[{"C:\\Users\\YewonKim\\Desktop\\react-app\\src\\index.js":"1","C:\\Users\\YewonKim\\Desktop\\react-app\\src\\App.js":"2","C:\\Users\\YewonKim\\Desktop\\react-app\\src\\reportWebVitals.js":"3","C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\ListBoardComponent.jsx":"4","C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\HeaderComponent.jsx":"5","C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\FooterComponent.jsx":"6","C:\\Users\\YewonKim\\Desktop\\react-app\\src\\service\\BoardService.js":"7","C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\CreateBoardComponent.jsx":"8","C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\ReadBoardComponent.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1364,"mtime":1611818216585,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":6225,"mtime":1611817929881,"results":"14","hashOfConfig":"11"},{"size":2544,"mtime":1611817210203,"results":"15","hashOfConfig":"11"},{"size":508,"mtime":1611544479179,"results":"16","hashOfConfig":"11"},{"size":764,"mtime":1611901945677,"results":"17","hashOfConfig":"11"},{"size":4006,"mtime":1611713174715,"results":"18","hashOfConfig":"11"},{"size":4279,"mtime":1611902310127,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"4kns39",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\YewonKim\\Desktop\\react-app\\src\\index.js",[],["40","41"],"C:\\Users\\YewonKim\\Desktop\\react-app\\src\\App.js",[],"C:\\Users\\YewonKim\\Desktop\\react-app\\src\\reportWebVitals.js",[],"C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\ListBoardComponent.jsx",["42","43","44","45","46","47"],"import React, { Component } from 'react';\r\nimport BoardService from '../service/BoardService';\r\n\r\n\r\nclass ListBoardComponent extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={ \r\n            p_num:1,\r\n            category:props.match.params.category,\r\n            paging:{},\r\n            boards:[]\r\n            \r\n        }\r\n        this.createBoard = this.createBoard.bind(this);\r\n    }\r\n\r\n    componentDidMount(){\r\n        BoardService.getBoards(this.state.category,this.state.p_num).then((res)=>{\r\n            this.setState({\r\n                p_num:res.data.pagingData.currentPageNum,\r\n                category:this.state.category,\r\n                paging:res.data.pagingData,\r\n                boards:res.data.list\r\n                \r\n            });\r\n        })\r\n    }\r\n\r\n    createBoard(){\r\n        this.props.history.push('/create-board/_create');\r\n    }\r\n    readBoard(num) {\r\n        this.props.history.push(`/read-board/${num}`);\r\n    }\r\n\r\n    listBoard(category,p_num){\r\n        console.log(\"pageNum : \"+ p_num);\r\n        BoardService.getBoards(category,p_num).then((res)=>{\r\n            console.log(res.data);\r\n            this.setState({\r\n                p_num:res.data.pagingData.currentPageNum,\r\n                category:this.state.category,\r\n                paging:res.data.pagingData,\r\n                boards:res.data.list});\r\n        });\r\n        //this.props.history.push(`?p_num=${p_num}`);\r\n    }\r\n\r\n    returnDate(board_date) {\r\n        const dateString=board_date+\"\"\r\n        let y= dateString.split(\"T\"); //날짜 , 시간.00:00:00\r\n        let yymmdd= y[0];\r\n        let t=y[1]+\"\";\r\n        let tt=t.split(\".\");\r\n        let hhmmss=tt[0];\r\n        return (\r\n            <div className = \"row\">\r\n                <label> [ {yymmdd}, {hhmmss} ] </label>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    viewPaging(){\r\n        const pageNums =[];\r\n        for(let i = this.state.paging.pageNumStart;i <= this.state.paging.pageNumEnd; i++ ){\r\n            pageNums.push(i);\r\n        }\r\n        return(pageNums.map((page)=> \r\n        <li className=\"page-item\" key={page.toString()}>\r\n            <a className=\"page-link\" onClick={()=> this.listBoard(this.state.category,page)}>{page}</a>\r\n        </li>\r\n        ));\r\n    }\r\n\r\n    isPagingPrev(){\r\n        if(this.state.paging.prev){\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={()=>this.listBoard((this.state.category,this.state.paging.currentPageNum-1))} tabIndex=\"-1\">Previous</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    isPagingNext(){\r\n        if(this.state.paging.next){\r\n            return(\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick={()=>this.listBoard((this.state.category,this.state.paging.currentPageNum+1))}tabIndex=\"-1\">Next</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n    isMoveToFirstPage() {\r\n        if (this.state.p_num !== 0) {//1\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick = {() => this.listBoard(this.state.category,1)} >Move to First Page</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n    isMoveToLastPage() {\r\n        if (this.state.p_num !== this.state.paging.pageNumCountTotal) {\r\n            return (\r\n                <li className=\"page-item\">\r\n                    <a className=\"page-link\" onClick = {() => this.listBoard( (this.state.category,this.state.paging.pageNumCountTotal) )} tabIndex=\"-1\">LastPage</a>\r\n                </li>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"text-center\">{this.state.category}</h2>\r\n\r\n                <div className=\"row\">\r\n                    <button className=\"btn btn-primary\" onClick={this.createBoard}>글 작성</button> \r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <table className=\"table table-striped table-bordered\">\r\n                        <thead>\r\n                            <tr>\r\n                               \r\n                                <th>타이틀</th>\r\n                                <th>작성날짜</th>\r\n                                <th>좋아요</th>\r\n                                <th>작성자</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            \r\n                            {\r\n                                this.state.boards.map(\r\n                                    board=>\r\n                                    <tr key ={board.board_no}>\r\n                                        <td> <a onClick ={()=> this.readBoard(board.board_no)}>{board.title}</a></td>\r\n                                        <td>{this.returnDate(board.board_date)}</td> \r\n                                        <td>{board.board_like}</td>\r\n                                        <td>{board.id}</td>\r\n                            \r\n                                    </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"row\">\r\n                <nav aria-label=\"Page navigation example\">\r\n                        <ul className=\"pagination justify-content-center\">\r\n                            \r\n                            {\r\n                                this.isMoveToFirstPage()\r\n                            }\r\n                            {\r\n                                this.isPagingPrev()\r\n                            }\r\n                            {\r\n                                this.viewPaging()\r\n                            }\r\n                            {\r\n                                this.isPagingNext()\r\n                            }\r\n                            {\r\n                                this.isMoveToLastPage()\r\n                            }\r\n                        </ul>\r\n                    </nav>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListBoardComponent;","C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\HeaderComponent.jsx",[],"C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\FooterComponent.jsx",[],"C:\\Users\\YewonKim\\Desktop\\react-app\\src\\service\\BoardService.js",[],"C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\CreateBoardComponent.jsx",[],"C:\\Users\\YewonKim\\Desktop\\react-app\\src\\components\\ReadBoardComponent.jsx",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":71,"column":13,"nodeType":"54","endLine":71,"endColumn":94},{"ruleId":"52","severity":1,"message":"53","line":80,"column":21,"nodeType":"54","endLine":80,"endColumn":147},{"ruleId":"52","severity":1,"message":"53","line":90,"column":21,"nodeType":"54","endLine":90,"endColumn":146},{"ruleId":"52","severity":1,"message":"53","line":99,"column":21,"nodeType":"54","endLine":99,"endColumn":103},{"ruleId":"52","severity":1,"message":"53","line":108,"column":21,"nodeType":"54","endLine":108,"endColumn":154},{"ruleId":"52","severity":1,"message":"53","line":140,"column":46,"nodeType":"54","endLine":140,"endColumn":96},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]